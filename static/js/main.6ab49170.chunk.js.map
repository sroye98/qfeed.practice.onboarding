{"version":3,"sources":["components/Header.js","components/Footer.js","views/Registration.js","views/ConfirmEmail.js","views/404.js","routes.js","Application.js","reportWebVitals.js","index.js"],"names":["HeaderLayout","props","className","FooterLayout","Registration","history","useHistory","title","name","labelCol","span","wrapperCol","plain","Item","label","rules","required","message","type","Password","icon","UploadOutlined","help","Group","direction","checked","value","onClick","push","ConfirmEmail","status","subTitle","NotFound","extra","Routes","exact","path","component","Header","Layout","Footer","Content","Application","style","margin","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ab49170.chunk.js","sourcesContent":["const HeaderLayout = (props) => {\n    return (\n        <div className=\"logo\" />\n    );\n};\n\nexport default HeaderLayout;","const FooterLayout = (props) => {\n    return (\n        <>\n            <p>&copy; 2021 All Rights Reserved.</p>\n        </>\n    );\n};\n\nexport default FooterLayout;","import { useHistory } from 'react-router-dom';\nimport { Button, Checkbox, Divider, Form, Input, PageHeader, Space, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst Registration = (props) => {\n    const history = useHistory();\n\n    const handleRegister = () => {\n        history.push('/confirm-email');\n    }\n\n    return (\n        <>\n            <PageHeader title=\"Registration\" />\n            <Form name=\"registration\" labelCol={{ span: 5 }} wrapperCol={{ span: 16 }}>\n                <Divider plain>Personal Information</Divider>\n                <Form.Item label=\"Full Name\" name=\"fullName\" rules={[{ required: true, message: 'Please enter the your full name' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Email Address\" name=\"email\" rules={[{ required: true, message: 'Please enter the your email address', type: 'email' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Please enter the your username' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please enter the your password' }]}>\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item label=\"Confirm Password\" name=\"confirmpassword\" rules={[{ required: true, message: 'Please confirm your password' }]}>\n                    <Input.Password />\n                </Form.Item>\n                <Divider plain>Practice Information</Divider>\n                <Form.Item label=\"Practice Name\" name=\"practiceName\" rules={[{ required: true, message: 'Please enter the practice name' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Practice Address\" name=\"practiceName\" rules={[{ required: false, message: 'Please enter the practice address' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Practice Website\" name=\"practiceUrl\" rules={[{ required: false, message: 'Please enter the practice website address' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Practice Logo\" name=\"practiceName\" rules={[{ required: false, message: 'Please enter the practice logo' }]}>\n                    <Upload>\n                        <Button icon={<UploadOutlined />}>Click to Upload Logo</Button>\n                    </Upload>\n                </Form.Item>\n                <Divider plain>Physician Information</Divider>\n                <Form.Item label=\"Physician Name\" name=\"physicianName\" rules={[{ required: true, message: 'Please enter the physician\\'s name' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Physician Specialties\" name=\"physicianSpecialties\" rules={[{ required: false, message: 'Please enter the physician\\'s specialties' }]}>\n                    <Input />\n                </Form.Item>\n                <Form.Item label=\"Physician Email Address\" name=\"physicianEmailAddress\" rules={[{ required: false, message: 'Please enter the physician\\'s email address' }]}>\n                    <Input />\n                </Form.Item>\n                <Divider plain>Social Media Options</Divider>\n                <Form.Item label=\"Render Video Streams\" name=\"renderStream\" help=\"Select which Social Media platforms we should automatically render\" rules={[{ required: true, message: 'Please select which platforms to automatically render streams' }]}>\n                    <Checkbox.Group>\n                        <Space direction=\"vertical\">\n                            <Checkbox checked={true} value=\"facebook\">Facebook</Checkbox>\n                            <Checkbox checked={true} value=\"instagram\">Instagram</Checkbox>\n                            <Checkbox checked={true} value=\"linkedin\">LinkedIn</Checkbox>\n                            <Checkbox checked={true} value=\"twitter\">Twitter</Checkbox>\n                        </Space>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item>\n                    <Space>\n                        <Button type=\"primary\" onClick={handleRegister}>Register</Button>\n                        <Button>Cancel</Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </>\n    );\n};\n\nexport default Registration;","import { Result } from 'antd';\n\nconst ConfirmEmail = (props) => {\n    return (\n        <Result status=\"success\" title=\"Thank you for registering.\" subTitle=\"We have sent you an email to the email address you have provied. Please confirm your email address.\" />\n    );\n};\n\nexport default ConfirmEmail;","import { useHistory } from 'react-router-dom';\nimport { Result, Button } from 'antd';\n\nconst NotFound = (props) => {\n    const history = useHistory();\n    \n    const goHome = () => {\n        history.push(\"/\");\n    };\n\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\" onClick={goHome}>Back Home</Button>} />\n    );\n};\n\nexport default NotFound;","import { Route, Switch } from 'react-router-dom';\n\nimport Registration from './views/Registration';\nimport ConfirmEmail from './views/ConfirmEmail';\nimport NotFound from './views/404';\n\nconst Routes = (props) => {\n    return (\n        <div className=\"site-layout-content\">\n            <Switch>\n                <Route exact path=\"/\" component={Registration} />\n                <Route exact path=\"/confirm-email\" component={ConfirmEmail} />\n                <Route path=\"*\" component={NotFound} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default Routes;","import { HashRouter as Router } from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport HeaderLayout from './components/Header';\nimport FooterLayout from './components/Footer';\nimport Routes from './routes';\n\nconst { Header, Footer, Content } = Layout;\n\nconst Application = (props) => {\n    return (\n        <Router>\n            <Layout>\n                <Header>\n                    <HeaderLayout />\n                </Header>\n                <Content style={{ margin: '20px' }}>\n                    <Routes />\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>\n                    <FooterLayout />\n                </Footer>\n            </Layout>\n        </Router>\n    );\n};\n\nexport default Application;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nimport Application from './Application';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}